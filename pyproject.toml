[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "aidoc.settings"
python_files = [
    "test_*.py",
    "*_test.py",
    "test*.py"
]
addopts = "-vv -x --lf"
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore:.*Django now detects this configuration.*:PendingDeprecationWarning",
    "ignore:.*Django now detects this configuration.*:DeprecationWarning",
]

[tool.black]
line-length = 79

[tool.isort]
profile = "black"
combine_as_imports = true
include_trailing_comma = true
line_length = 79

[tool.ruff]
target-version = "py312"
line-length = 79

[tool.taskipy.tasks]
tests = "python -m pytest core/tests/"
coverage = "coverage run --source='.' -m pytest core/tests/;coverage report -m"
pre = "pre-commit run --all-files"
export = "poetry export -f requirements.txt -o requirements.txt --without-hashes"
tailwind_watch = "tailwindcss -i tailwind.css -o aidoc/static_files/tailwind-build.css --watch"
tailwind_minify = "tailwindcss -i tailwind.css -o aidoc/static_files/tailwind-build.css --minify"
worker = "celery -A aidoc worker -l info"
flower = "celery -A aidoc flower --address=0.0.0.0 --port=5555 --loglevel=info"

[tool.poetry]
name = "ai-doc"
version = "0.1.0"
description = ""
authors = ["Gon√ßalo Franco <gapfranco@gmail.com>"]
readme = "README.md"
packages = [{include = "ai_doc"}]

[tool.poetry.dependencies]
python = "^3.12"
django = "^4.2"
djangorestframework = "^3.14.0"
whitenoise = "^6.6.0"
python-dotenv = "^1.0.1"
requests = "^2.31.0"
gunicorn = "^21.2.0"
dj-database-url = "^2.1.0"
psycopg2-binary = "^2.9.9"
pillow = "^10.2.0"
openai = "^1.12.0"
langchain = "^0.1.9"
pypdf2 = "^3.0.1"
qdrant-client = "^1.7.3"
tiktoken = "^0.6.0"
langchain-openai = "^0.0.7"
python-magic = "^0.4.27"
docx2python = "^2.8.0"
markdown = "^3.5.2"
celery = {extras = ["redis"], version = "^5.3.5"}
flower = "^2.0.1"

[tool.poetry.group.dev.dependencies]
black = "^24.2.0"
isort = "^5.13.2"
ruff = "^0.3.0"
pytest = "^8.0.2"
pytest-django = "^4.8.0"
coverage = "^7.4.3"
taskipy = "^1.12.2"
pre-commit = "^3.6.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
